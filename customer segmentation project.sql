-- Create Customers Table
CREATE TABLE Customers (
    customer_id int PRIMARY KEY,
    customer_name VARCHAR(100),
    gender VARCHAR(10),
    age INT,
    location VARCHAR(100)
    
);

-- Create Products Table
CREATE TABLE Products (
    product_id int PRIMARY KEY,
    product_name VARCHAR(100),
    category VARCHAR(50),
    price DECIMAL(10, 2)
);

-- Create Stores Table
CREATE TABLE Stores (
    store_id int PRIMARY KEY,
    store_name VARCHAR(100),
    location VARCHAR(100)
);

-- Create Sales Table
CREATE TABLE Sales (
    sale_id int PRIMARY KEY,
    customer_id INT,
    product_id INT,
    store_id INT,
    quantity INT,
    total_price DECIMAL(10, 2),
    sale_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
  
);

-- Insert Data into Customers Table
INSERT INTO Customers (customer_id,customer_name, gender, age, location) 
VALUES
(1,'Alice Johnson', 'Female', 30, 'New York'),
(2,'Bob Smith', 'Male', 22, 'Los Angeles'),
(3,'Carol White', 'Female', 35, 'Chicago'),
(4,'David Brown', 'Male', 40, 'Houston'),
(5,'Eva Green', 'Female', 28, 'Phoenix');

-- Insert Data into Products Table
INSERT INTO Products ( product_id,product_name, category, price)
VALUES
(1,'Laptop', 'Electronics', 1200.00),
(2,'Smartphone', 'Electronics', 800.00),
(3,'Headphones', 'Accessories', 150.00),
(4,'Tablet', 'Electronics', 300.00),
(5,'Charger', 'Accessories', 20.00);

-- Insert Data into Stores Table
INSERT INTO Stores (store_id,store_name, location)
VALUES
(1,'Downtown Store', 'New York'),
(2,'Westside Store', 'Los Angeles'),
(3,'Midtown Store', 'Chicago'),
(4,'Uptown Store', 'Houston'),
(5,'Eastside Store', 'Phoenix');

-- Insert Data into Sales Table
INSERT INTO Sales (sale_id,customer_id, product_id, store_id, quantity, total_price) VALUES
(1,1, 1, 1, 1, 1200.00),  
(2,2, 2, 2, 1, 800.00),   
(3,3, 3, 3, 2, 300.00),  
(4,4, 4, 4, 1, 300.00),   
(5,5, 5, 5, 3, 60.00);    


select * from sales


------------Total Number of Customers
select * from customers
select count(customer_id) from customers

--What is the distribution of customers by gender?
select count(gender),gender from customers
group by gender
order by gender desc

----- How are customers distributed across different age groups (e.g., 18-25, 26-35, 36-45, etc.)?

SELECT 
    CASE 
        WHEN age BETWEEN 18 AND 25 THEN '18-25'
        WHEN age BETWEEN 26 AND 35 THEN '26-35'
        WHEN age BETWEEN 36 AND 45 THEN '36-45'
        ELSE '46+' 
    END AS age_group,
    COUNT(age) AS total_customers
FROM customers
GROUP BY age_group;

------Top 5 Customers by Total Spending

select * from customers
select * from sales
select * from products

select customer_name,sum(p.price * s.quantity) as total
from customers as c
join sales s
on s.customer_id = c.customer_id 
join products as p
on p.product_id = s.product_id
group by customer_name
order by total desc

----How many customers have made more than one purchase?


SELECT customer_name, COUNT(s.sale_id) AS total_purchases
FROM customers c
JOIN sales s 
ON s.customer_id = c.customer_id
GROUP BY customer_name
HAVING COUNT(s.sale_id) >= 1
ORDER BY total_purchases DESC;

----What is the average order value across all customers?

select avg(total_price) from sales

----What is the total sales amount by customer location (region)?

select customer_name,location, sum(p.price * s.quantity) as total
from customers c
join sales s
on s.customer_id = c.customer_id
join products p
on p.product_id = s.product_id
group by customer_name,location
order by total desc


----What is the total sales revenue generated by male and female customers?
select  gender, sum(p.price * s.quantity) as total
from customers c
join sales s
on s.customer_id = c.customer_id
join products p
on p.product_id = s.product_id
group by gender
order by total desc

---What are the top 5 products preferred by a specific customer segment (e.g., customers aged 18-25)?

SELECT p.product_name, SUM(s.quantity) AS total_quantity
FROM sales s
JOIN customers c ON s.customer_id = c.customer_id
JOIN products p ON s.product_id = p.product_id
WHERE c.age BETWEEN 18 AND 25
GROUP BY p.product_name
ORDER BY total_quantity DESC
LIMIT 5;

---How many customers have not made a purchase in the last 12 months?

SELECT COUNT(DISTINCT customer_id) AS inactive_customer
FROM customers
WHERE customer_id NOT IN (
    SELECT DISTINCT customer_id 
    FROM sales 
    WHERE sale_date > NOW() - INTERVAL '12 months'
);

----How has the company's sales revenue grown year-over-year?

SELECT EXTRACT(YEAR FROM sale_date) AS year, SUM(total_price) AS total_sales
FROM sales
GROUP BY year
ORDER BY year;



